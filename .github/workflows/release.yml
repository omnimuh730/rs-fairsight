name: Publish Tauri App

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libpcap-dev \
            libssl-dev

      - name: Install Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          # WinPcap/Npcap should be pre-installed on GitHub runners
          # If not, you can download and install it here
          echo "Windows pcap support should be available"

      - name: Install app dependencies and build frontend
        run: npm ci && npm run build
        working-directory: ${{ github.workspace }}

      - name: Build and publish Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ${{ github.workspace }}
          tagName: app-v__VERSION__ # Automatically replaced with tauri.conf.json version
          releaseName: App v__VERSION__
          releaseBody: See the assets to download this version and install.
          releaseDraft: true
          prerelease: false